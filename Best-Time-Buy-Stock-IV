  /**
     * @param k: An integer
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
    public int maxProfit(int k, int[] prices) {
        if (prices.length < 2 || k <= 0)
		    return 0;
 
        // if k is large, do it as maximum profit II
    	if(k / 2 > prices.length){
    	    int result = 0;
    	    for(int i = 1;i < prices.length;i++){
    	        if(prices[i] > prices[i - 1]){
    	            result += prices[i] - prices[i - 1];
    	        }
    	    }
    	    return result;
    	}
     
    	int[] local = new int[k + 1];
    	int[] global = new int[k + 1];
     
    	for (int i = 0; i < prices.length - 1; i++) {
    		int diff = prices[i + 1] - prices[i];
    		for (int j = k; j >= 1; j--) {
    			local[j] = Math.max(global[j - 1] + Math.max(diff, 0), local[j] + diff);
    			global[j] = Math.max(local[j], global[j]);
    		}
    	}
     
    	return global[k];
    }
