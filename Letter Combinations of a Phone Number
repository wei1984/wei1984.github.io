public ArrayList<String> letterCombinations(String digits) {
        // Write your code here
        ArrayList<String> res = new ArrayList<String>();
        if(digits.length() == 0) return res;
        Map<Character,String> map = new HashMap<Character,String>();
        map.put('1',"");
        map.put('2',"abc");
        map.put('3',"def");
        map.put('4',"ghi");
        map.put('5',"jkl");
        map.put('6',"mno");
        map.put('7',"pqrs");
        map.put('8',"tuv");
        map.put('9',"wxyz");
        map.put('0'," ");
        
        dfs(digits,0,res,"",map);
        return res;
    }
    
    private void dfs(String digits,int index,ArrayList<String> res,String tmp,Map<Character,String> map){
        if(index == digits.length()){
            res.add(tmp);
        }else{
            String s = map.get(digits.charAt(index));
            for(int i = 0;i < s.length();i++){
                String t = tmp + s.charAt(i);
                dfs(digits,index + 1,res,t,map);
            }
        }
    }
